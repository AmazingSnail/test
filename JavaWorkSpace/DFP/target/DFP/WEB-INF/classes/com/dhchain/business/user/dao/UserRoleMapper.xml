<?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dhchain.business.user.dao.UserRoleMapper">


    <!--<resultMap id="userVoResultMap" type="com.dhchain.business.user.vo.LoginUser">-->
        <!--<id column="id" property="id" jdbcType="BIGINT"/>-->
        <!--<result column="login_name" property="loginName" jdbcType="VARCHAR"/>-->
        <!--<result column="name" property="name" jdbcType="VARCHAR"/>-->
        <!--<result column="password" property="password" jdbcType="VARCHAR"/>-->
        <!--<result column="sex" property="sex" jdbcType="TINYINT"/>-->
        <!--<result column="age" property="age" jdbcType="TINYINT"/>-->
        <!--<result column="user_type" property="userType" jdbcType="TINYINT"/>-->
        <!--<result column="status" property="status" jdbcType="TINYINT"/>-->
        <!--<result column="organization_id" property="organizationId" jdbcType="INTEGER"/>-->
        <!--<result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>-->
        <!--<result column="phone" property="phone" jdbcType="VARCHAR"/>-->

        <!--<result column="organizationName" property="organizationName" jdbcType="VARCHAR"/>-->

        <!--<collection property="rolesList" ofType="Role">-->
            <!--<id column="roleId" property="id"/>-->
            <!--<result column="roleName" property="name"/>-->
        <!--</collection>-->
    <!--</resultMap>-->
<!-- 通用查询结果列-->
<sql id="Base_Column_List">
    id, user_id AS userId, role_id AS roleId
</sql>

<select id="selectByUserId" resultType="com.dhchain.business.user.vo.UserRole" parameterType="java.lang.Long">
    select
    <include refid="Base_Column_List"/>
    from u_user_role
    where user_id = #{userId}
</select>

    <select id="selectUserPage" resultType="com.dhchain.business.user.vo.LoginUser">
        select id, loginName,name,phone,password,sex,age,createTime,userType,status,organizationId,organizationName,
        stuff((select ','+name from (select t.id , o.name from u_user t LEFT JOIN u_user_role r ON t.id = r.user_id
        LEFT JOIN u_role o ON r.role_id = o.id
        LEFT JOIN u_organization s ON s.id = t.organization_id ) as tab where id=qqq.id for xml path('')),1,1,'') rolesList
        from (select t.id ,t.login_name AS loginName , t.name, t.phone, t.password, t.sex, t.age, t.create_time AS createTime,
        t.user_type AS userType, t.status, t.organization_id AS organizationId,
        s.name AS organizationName from u_user t LEFT JOIN u_user_role r ON t.id = r.user_id
        LEFT JOIN u_role o ON r.role_id = o.id
        LEFT JOIN u_organization s ON s.id = t.organization_id ) as  qqq
        <where>
            <if test=" name != null and name != '' ">
                name = #{name}
            </if>
            <if test=" organizationId != null ">
                organizationId = #{organizationId}
            </if>
            <if test=" startTime != null ">
                <![CDATA[ and createTime >= #{startTime} ]]>
            </if>
            <if test=" endTime != null ">
                <![CDATA[ and createTime <= #{endTime} ]]>
            </if>
        </where>
        GROUP BY  id,loginName,name,phone,password,sex,age,createTime,userType,status,organizationId,organizationName
    </select>


    <insert id="insert" parameterType="com.dhchain.business.user.vo.UserRole" useGeneratedKeys="true" keyProperty="id">
        insert into u_user_role(user_id, role_id) values(#{userId}, #{roleId})
    </insert>

    <delete  id="deleteById" parameterType="java.lang.Long">
        delete from
        u_user_role
        where id=#{id}
    </delete >

</mapper>