<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">
        
    <context:annotation-config/>
    <aop:config proxy-target-class="true"></aop:config>
    <aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy>
    <context:component-scan base-package="com.dhchain.*"/>
    <!--<context:component-scan base-package="com.dhchain.business.partpunchingworkshop.service"/>-->
    <context:property-placeholder location="classpath:application.properties"/>
    <bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.dhchain.business.*"/>
        <!-- 3.2.2版本新特性，markerInterface可以起到mappers配置的作用，详细情况需要看Marker接口类 -->
        <property name="markerInterface" value="com.dhchain.util.MyMapper"/>
        <!-- 通用Mapper通过属性注入进行配置，默认不配置时会注册Mapper<T>接口
        <property name="properties">
            <value>
                mappers=tk.mybatis.mapper.common.Mapper
            </value>
        </property>
        -->
    </bean>

    <aop:config>
        <aop:pointcut id="appService" expression="execution(* com.dhchain.business.*..*Service*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="appService"/>
    </aop:config>

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="select*" read-only="true"/>
            <tx:method name="find*" read-only="true"/>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>


	<!-- 引入spring mvc配置文件 -->
    <import resource="spring/dhchain-mvc.xml" />

    <!-- 引入mybatis配置文件 -->
    <import resource="spring/dhchain-data.xml" />

    <!-- 引入spring-shiro配置文件 -->
    <import resource="spring/spring-shiro.xml" />

    <!-- 引入spring-ehcache配置文件 -->
    <import resource="spring/spring-ehcache.xml" />

    <!-- 引入activiti -->
    <import resource="spring/spring-activiti.xml" />
</beans>
